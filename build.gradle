plugins {
	id 'eclipse'
	id 'idea'
	id 'java-library'
	id 'net.neoforged.moddev' version '1.0.0'
	id 'maven-publish'
}

base {
	archivesName = project.mod_id
}
version = project.mod_version
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
	version = project.neo_version

	parchment {
		minecraftVersion = minecraft_version
		mappingsVersion = parchment_version
	}

	runs {
		client {
			client()
			programArguments.addAll '--username', 'Dev###'
		}

		server {
			server()
			programArgument '--nogui'
		}

		configureEach {
			logLevel = org.slf4j.event.Level.WARN
		}
	}

	mods {
		"${project.mod_id}" {
			sourceSet sourceSets.main
		}
	}
}

repositories {
	maven { url = "https://maven.tterrag.com/" }
	mavenLocal()
}

dependencies {
	jarJar(implementation("com.lovetropics.lib:LTLib:$ltlib_version"))
	jarJar(implementation("eu.pb4:placeholder-api-lt:$placeholder_api_version"))
}

tasks.withType(ProcessResources).configureEach {
	var replaceProperties = [
			mod_id: mod_id,
			mod_version: mod_version,
	]
	inputs.properties replaceProperties

	filesMatching(['META-INF/neoforge.mods.toml']) {
		expand replaceProperties
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

idea {
	module {
		downloadSources = true
		downloadJavadoc = true
	}
}

publishing {
	publications {
		register('mavenJava', MavenPublication) {
			from components.java
		}
	}

	repositories {
		if (project.hasProperty('mavendir')) {
			maven { url mavendir }
		} else {
			mavenLocal()
		}
	}
}
